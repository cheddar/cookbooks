scriptencoding utf-8

"-----------------------------------------------------------------------
" terminal setup
"-----------------------------------------------------------------------

if (&term =~ "xterm" || &term =~ "screen" || &term =~ "rxvt-unicode") && (&termencoding == "")
	set termencoding=utf-8
endif

" http://superuser.com/questions/401926/how-to-get-shiftarrows-and-ctrlarrows-working-in-vim-in-tmux
if &term =~ '^screen'
	execute "set <xUp>=\e[1;*A"
	execute "set <xDown>=\e[1;*B"
	execute "set <xRight>=\e[1;*C"
	execute "set <xLeft>=\e[1;*D"
endif

"-----------------------------------------------------------------------
" global settings
"-----------------------------------------------------------------------

" don't be compatible with vi
set nocompatible

<% if !root? %>
" load neobundle
if has('vim_starting')
	set runtimepath+=~/.vim/bundle/neobundle.vim/
endif
call neobundle#rc(expand('~/.vim/bundle/'))
NeoBundleFetch 'Shougo/neobundle.vim'
<% end %>

" fast redrawing
set ttyfast
set lazyredraw

" enable a nice big viminfo file
set viminfo='1000,f1,:1000,/1000
set history=500

" make backspace delete lots of things
set backspace=indent,eol,start

" show us the command we're typing
set showcmd

" highlight matching parens
set showmatch

" search options: incremental search, highlight search
set hlsearch
set incsearch

" case insensitive
set ignorecase
set infercase
set smartcase

" show line numbers
set number

" always show the statusbar
set laststatus=2

" show full tags when doing search completion
set showfulltag

" use hidden buffers
set hidden

" scrolling context
set scrolloff=6
set sidescrolloff=5

" wrap on these
set whichwrap+=<,>,[,]

" but by default do not wrap
set nowrap

" by default, go for an indent of 4 and do not expand tabs
set shiftwidth=4
set tabstop=4
set noexpandtab

" fold automatically on markers
set foldmethod=marker

" enable syntax highlighting
if has("syntax")
	syntax on
endif

" enable and reload filetype settings
if has("eval")
	filetype on
	filetype plugin on
	filetype indent on
endif

" enable modelines only on secure vim versions
if (v:version >= 604)
	set modeline modelines=10
else
	set nomodeline
endif

" Nice window title
set title
if has('title') && (has('gui_running') || &title)
	set titlestring=
	set titlestring+=%f\                     " file name
	set titlestring+=%h%m%r%w                " flags
	set titlestring+=\ -\ %{v:progname}      " program name
endif

" if possible, try to use a narrow number column.
if v:version >= 700
	try
		setlocal numberwidth=3
	catch
	endtry
endif

" show tabs and trailing whitespace visually
if (&termencoding == "utf-8") || has("gui_running")
	if v:version >= 700
		set list listchars=tab:»·,trail:·,extends:…,nbsp:‗
	else
		set list listchars=tab:»·,trail:·,extends:…
	endif
else
	if v:version >= 700
		set list listchars=tab:>-,trail:.,extends:>,nbsp:_
	else
		set list listchars=tab:>-,trail:.,extends:>
	endif
endif

"-----------------------------------------------------------------------
" final commands
"-----------------------------------------------------------------------

" turn of previous search results
au VimEnter * nohls

" file type specific settings
augroup filetype_settings
	au BufRead,BufNewFile *.json set ft=javascript
	au BufRead,BufNewFile *.coffee set ft=coffee
	au BufRead,BufNewFile *.applescript set ft=applescript

	au FileType {css,scss} set ts=2 sw=2 et
	au FileType {coffee,javascript,json} set ts=2 sw=2 et
	au FileType {haml,html} set ts=2 sw=2 et
	au FileType {ruby,eruby,yaml} set ts=2 sw=2 et
	au FileType python set ts=4 sw=4 tw=79 et
augroup END

<% if !root? %>
" load custom vimrc
source <%= node[:homedir] %>/.vimrc.local
<% end %>

" vim: set sw=4 ts=4 tw=72
