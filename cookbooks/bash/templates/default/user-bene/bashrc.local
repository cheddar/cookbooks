# load virtualenv wrapper
if [[ -r /usr/bin/virtualenvwrapper.sh ]]; then
	export VIRTUALENV_USE_DISTRIBUTE=1
	export VIRTUAL_ENV_DISABLE_PROMPT=1
	export PIP_VIRTUALENV_BASE=$WORKON_HOME
	export PIP_RESPECT_VIRTUALENV=true
	source /usr/bin/virtualenvwrapper.sh
fi

# git aliases
alias ga="git add -A"
alias gb="git blame"
alias gcm="git checkout master"
alias gcl="git checkout live"
alias gdm="git diff master"
alias gd="git diff"
alias gdc="git diff --cached"
alias gl="git lg"
alias gp="git pull"
alias gpr="git pull --rebase"
alias grh="git reset HEAD"

# rails shortcuts
alias brs="bundle exec rails server"
alias con="bundle exec rails console"

# host shortcuts
alias I="ssh chef.itratos.net"
alias M="ssh bene.madvertise.me"
alias S="ssh chef.subma.net"
alias Z="ssh dev.zentoo.org"

wake() {
	case "$1" in
	chaos)
		wakeonlan 00:1b:21:5f:5f:45
		;;
	esac
}

# init script helpers
sva () { sudo /etc/init.d/$1 start; }
svo () { sudo /etc/init.d/$1 stop; }
svr () { sudo /etc/init.d/$1 restart; }

# gentoo development
export ECHANGELOG_USER="Benedikt Böhm <hollow@gentoo.org>"

eportdir() {
	if [[ -n "${PORTDIR_CACHE}" ]]; then
		echo "${PORTDIR_CACHE}"
	elif [[ -d ${HOME}/work/gentoo/cvs ]]; then
		PORTDIR_CACHE="${HOME}/projects/gentoo/cvs"
		eportdir
	elif [[ -d /usr/portage ]]; then
		PORTDIR_CACHE="/usr/portage"
		eportdir
	else
		PORTDIR_CACHE="$(portageq portdir)"
		eportdir
	fi
}

repm() {
	repoman manifest
}

reps() {
	repm
		repoman scan
}

repf() {
	repm
		repoman full
}

emerge() {
	if [[ ${_DISTNAME} == "gentoo" ]]; then
		sudo $(which emerge) "$@"
	else
		$(which emerge) "$@"
	fi
}

eci() {
	local answer msg

	repoman manifest || return 1
	cvs diff | colordiff | less -R
	repoman full

	echo -n 'continue? (y/N) '
	read -e answer
	[[ "${answer}" != "y" && "${answer}" != "Y" ]] && return 1

	while [[ "${msg}" == "" ]]; do
		echo -n 'enter commit message> '
		read -e msg
	done

	echangelog "${msg}" || return 1
	repoman commit -m "${msg}" || return 1
}

putdgo() {
	scp $1 hollow@dev.gentoo.org:$2
}

putmirror() {
	putdgo $1 /space/distfiles-local/
}

putdist() {
	putdgo $1 /home/hollow/public_html/distfiles/
	putdgo $1 /space/distfiles-local/
}

# zentoo development
geix() {
	pushd ~/projects/zentoo >/dev/null
	./scripts/sync-gentoo-cache
	eix --cache-file ./eix.cache.gentoo "$@"
	popd >/dev/null
}

fix_osx() {
	# Gratuitously stolen from @mathiasbynens
	# https://github.com/mathiasbynens/dotfiles/blob/master/.osx

	# Disable menu bar transparency
	defaults write NSGlobalDomain AppleEnableMenuBarTransparency -bool false

	# Show remaining battery time; hide percentage
	defaults write com.apple.menuextra.battery ShowPercent -string "NO"
	defaults write com.apple.menuextra.battery ShowTime -string "YES"

	# Always show scrollbars
	defaults write NSGlobalDomain AppleShowScrollBars -string "Always"

	# Expand save panel by default
	defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true

	# Expand print panel by default
	defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true

	# Disable the “Are you sure you want to open this application?” dialog
	defaults write com.apple.LaunchServices LSQuarantine -bool false

	# Display ASCII control characters using caret notation in standard text views
	# Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
	defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

	# Disable opening and closing window animations
	defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool false

	# Increase window resize speed for Cocoa applications
	defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

	# Disable Resume system-wide
	defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false

	# Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)
	defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

	# Enable subpixel font rendering on non-Apple LCDs
	defaults write NSGlobalDomain AppleFontSmoothing -int 2

	# Disable press-and-hold for keys in favor of key repeat
	defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

	# Disable auto-correct
	defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

	# Require password immediately after sleep or screen saver begins
	defaults write com.apple.screensaver askForPassword -int 1
	defaults write com.apple.screensaver askForPasswordDelay -int 0

	# Disable window animations and Get Info animations in Finder
	defaults write com.apple.finder DisableAllAnimations -bool true

	# Show all filename extensions in Finder
	defaults write NSGlobalDomain AppleShowAllExtensions -bool true

	# Show status bar in Finder
	defaults write com.apple.finder ShowStatusBar -bool true

	# Allow text selection in Quick Look
	defaults write com.apple.finder QLEnableTextSelection -bool true

	# Disable disk image verification
	defaults write com.apple.frameworks.diskimages skip-verify -bool true
	defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
	defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

	# Automatically open a new Finder window when a volume is mounted
	defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
	defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
	defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

	# Display full POSIX path as Finder window title
	defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

	# Avoid creating .DS_Store files on network volumes
	defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

	# Disable the warning when changing a file extension
	defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

	# Show the ~/Library folder
	chflags nohidden ~/Library

	# Enable highlight hover effect for the grid view of a stack (Dock)
	defaults write com.apple.dock mouse-over-hilte-stack -bool true

	# Enable spring loading for all Dock items
	defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

	# Show indicator lights for open applications in the Dock
	defaults write com.apple.dock show-process-indicators -bool true

	# Don’t animate opening applications from the Dock
	defaults write com.apple.dock launchanim -bool false

	# Remove the auto-hiding Dock delay
	defaults write com.apple.Dock autohide-delay -float 0

	# Remove the animation when hiding/showing the Dock (actually, make it fast. If you want to remove, use 0)
	defaults write com.apple.dock autohide-time-modifier -float 0.25

	# Automatically hide and show the Dock
	defaults write com.apple.dock autohide -bool true

	# Enable Safari’s debug menu
	defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

	# Add a context menu item for showing the Web Inspector in web views
	defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

	# Prevent Time Machine from prompting to use new hard drives as backup volume
	defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

	# Kill affected applications
	for app in Finder Dock Safari SystemUIServer; do killall "$app" > /dev/null 2>&1; done
	echo "OSX Hacks Done. Note that some of these changes require a logout/restart to take effect."
}
