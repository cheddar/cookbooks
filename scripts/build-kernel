#!/bin/bash

KV="3.7.1-zentoo"

BASE_URL="https://raw.github.com/zentoo/kernels/master"

# cleanup old cruft first
for i in linux-*; do
	if [[ $i != linux-${KV} && $i != 'linux-*' ]]; then
		echo "Cleaning ${i} ..."
		rm -rf $i
	fi
done

rm -vf /boot/*.old /boot/vmlinuz* /boot/System.map-* /boot/config-* /boot/*genkernel*
rm -vf /boot/{System.map,initramfs,kernel,config}

# let's see if we have a prebuilt image
curl -s -I ${BASE_URL}/kernel-${KV} | grep -q '200 OK'

if [[ $? -eq 0 ]]; then
	wget -nv -O /boot/kernel-${KV} ${BASE_URL}/kernel-${KV} || exit 1
	wget -nv -O /boot/initramfs-${KV}.img  ${BASE_URL}/initramfs-${KV}.img || exit 1
else
	if [[ ! -d /usr/src/linux-${KV} ]]; then
		echo "!!! kernel version ${KV} does not exist ..."
		exit 1
	fi

	pushd /usr/src

	rm linux
	ln -snf linux-${KV} linux

	pushd linux

	wget -nv -O .config "https://raw.github.com/zentoo/quickstart/next/profiles/${KV}-generic.kconfig" || exit 1

	make oldconfig || exit 1
	make -j2 || exit 1

	cp arch/x86/boot/bzImage /boot/kernel-${KV} || exit 1

	popd
	popd

	# build initramfs
	emerge -n sys-kernel/dracut || exit 1
	dracut /boot/initramfs-${KV}.img || exit 1
fi

# use UUID for rootfs in fstab
root_device=$(grep ' / ' /proc/mounts | grep -v ^rootfs | awk '{ print $1 }')
root_uuid=$(blkid -s UUID -o value ${root_device})

if [[ -z ${root_uuid} ]]; then
	echo "!!! could not lookup rootfs UUID"
	exit 1
fi

sed -i -r "/\/.*\s+\/\s+/s:.*(\s/\s+.*):UUID=${root_uuid}\1:" /etc/fstab

# on MBR systems use grub-1, on GPT/EFI use grub-2
# the heuristic may not be the best but works in the general case
if partx -s -o SCHEME /dev/sda | grep -q gpt; then
	emerge -n grub:2 || exit 1

	sed -i -e '/^GRUB_CMDLINE_LINUX=/s/=.*/="rd.md=1 rd.lvm=1 rd.lvm.vg=vg"/' /etc/default/grub || exit 1
	mkdir -p /boot/grub2 || exit 1
	grub2-mkconfig -o /boot/grub2/grub.cfg || exit 1

	for device in /dev/sd?; do
		grub2-install ${device}
	done
else
	emerge -n grub:0 || exit 1

	echo "default 0" > /boot/grub/grub.conf
	echo "timeout 10" >> /boot/grub/grub.conf

	echo quit | /sbin/grub --batch --no-floppy --device-map=/boot/grub/device.map >/dev/null 2>&1

	for device in /dev/sd?; do
		grub_device=$(grep "${device}\$" /boot/grub/device.map | awk '{ print $1; }' | sed -e 's:[()]::g')

		if [ -z "${grub_device}" ]; then
			echo "!!! could not map boot device ${device} to grub device"
			exit 1
		fi

		echo -e "\ntitle Gentoo Linux on ${device}" >> /boot/grub/grub.conf
		echo "root (${grub_device},0)" >> /boot/grub/grub.conf
		echo "kernel /boot/kernel-${KV} root=UUID=${root_uuid} ro rd.md=1 rd.lvm=1 rd.lvm.vg=vg" >> /boot/grub/grub.conf
		echo "initrd /boot/initramfs-${KV}.img" >> /boot/grub/grub.conf

		echo -e "root (${grub_device},0)\nsetup (${grub_device})\nquit" | /sbin/grub --batch --no-floppy
	done
fi
